<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="dk.brics.jwig" default="all" basedir=".">

    <property name="project" value="jwig"/>
    <property name="version" value="2.0"/>
    <property name="release" value="2"/>

    <property name="optimize" value="on"/>
    <property name="debug" value="on"/>

    <property file="local.properties"/>

    <path id="classpath">
        <fileset dir="." includes="lib/**/*.jar"/>
    </path>

    <target name="all" depends="clean,jar,doc,zip,kickstart,manual"/>

    <target name="compile">
        <mkdir dir="build"/>
        <javac srcdir="src" includes="**" excludes="**/analysis/**" source="1.7" target="1.7" destdir="build"
               optimize="${optimize}" debug="${debug}" includeantruntime="false">
            <classpath refid="classpath"/>
            <compilerarg line="-encoding ISO-8859-1" compiler="modern"/>
            <compilerarg line="-Xlint -Xlint:-serial -Xlint:-path" compiler="modern"/>
        </javac>
        <!--
        <java classname="JSMin" output="build/jwig.js">
            <classpath refid="classpath"/>
            <arg value="src/jwig.js"/>
        </java>
        -->
        <copy todir="build">
            <fileset includes="**/jwig.js" dir="src"/>
        </copy>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="dist"/>
        <jar jarfile="dist/${project}.jar" basedir="build" includes="**"/>
        <jar jarfile="dist/${project}-src.jar" basedir="src" includes="**/*.java,**/*.html,**/*.js"/>
    </target>

    <target name="clean" depends="clean-generated">
        <delete dir="build"/>
        <delete dir="test/build"/>
        <delete dir="examples/build"/>
        <delete dir="doc"/>
        <delete dir="doc-public"/>
        <delete dir="dist"/>
    </target>

    <target name="clean-generated">
        <!--
        <fileset id="xactfiles" dir="." includes="examples/src/**/*.xact"/>
        <pathconvert property="generatedfiles" refid="xactfiles" pathsep=",">
            <chainedmapper>
                <filtermapper>
                    <replacestring from="${basedir}" to="."/>
                </filtermapper>
                <regexpmapper handledirsep="true" from="^(.*)\.xact$$" to="\1.java"/>
            </chainedmapper>
        </pathconvert>
        <delete verbose="true">
            <filelist files="${generatedfiles}"/>
        </delete>
        -->
        <delete file="manual/manual.html"/>
    </target>

    <target name="zip" depends="jar,doc,manual">
        <property name="dir" value="${project}-${version}"/>
        <mkdir dir="${dir}"/>
        <copy todir="${dir}">
            <fileset dir="." includes="README,COPYING,INSTALL,INSTALL-PROXY,INSTALL-DATABASE,build.xml"/>
        </copy>
        <mkdir dir="${dir}/dist"/>
        <copy file="dist/${project}.jar" todir="${dir}/dist"/>
        <mkdir dir="${dir}/doc"/>
        <copy todir="${dir}/doc">
            <fileset dir="doc"/>
        </copy>
        <mkdir dir="${dir}/doc-public"/>
        <copy todir="${dir}/doc-public">
            <fileset dir="doc-public"/>
        </copy>
        <mkdir dir="${dir}/src"/>
        <copy todir="${dir}/src">
            <fileset dir="src"/>
        </copy>
        <mkdir dir="${dir}/lib"/>
        <copy todir="${dir}/lib">
            <fileset dir="lib"/>
        </copy>
        <mkdir dir="${dir}/web"/>
        <copy todir="${dir}/web">
            <fileset dir="web"/>
        </copy>
        <mkdir dir="${dir}/kickstart"/>
        <copy todir="${dir}/kickstart">
            <fileset dir="kickstart"/>
        </copy>
        <mkdir dir="${dir}/manual"/>
        <copy todir="${dir}/manual">
            <fileset dir="manual"/>
        </copy>
        <zip zipfile="dist/${dir}-${release}.zip" basedir="." includes="${dir}/**"/>
        <delete dir="${dir}"/>
    </target>

    <target name="kickstart" depends="jar">
        <mkdir dir="jwig-kickstart/lib"/>
        <copy file="dist/${project}.jar" todir="jwig-kickstart/lib"/>
        <copy todir="jwig-kickstart">
            <fileset dir="kickstart"/>
        </copy>
        <copy todir="jwig-kickstart/lib">
            <fileset dir="lib" excludes="analysis/** hibernate3.jar"/>
        </copy>
        <copy todir="jwig-kickstart/web">
            <fileset dir="web"/>
        </copy>
        <copy todir="jwig-kickstart">
            <fileset dir="." includes="COPYING,INSTALL,INSTALL-DATABASE,INSTALL-PROXY"/>
        </copy>
        <zip zipfile="dist/jwig-kickstart.zip" basedir="." includes="jwig-kickstart/**"/>
        <delete dir="jwig-kickstart"/>
    </target>

    <target name="doc" depends="jar">
        <mkdir dir="doc"/>
        <javadoc packagenames="dk.brics.jwig,
                               dk.brics.jwig.util,
                               dk.brics.jwig.analysis,
                               dk.brics.jwig.analysis.graph,
                               dk.brics.jwig.analysis.xact,
                               dk.brics.jwig.server,
                               dk.brics.jwig.server.cache,
                               dk.brics.jwig.server.comet,
                               dk.brics.jwig.server.resin,
                               dk.brics.jwig.server.tomcat6,
                               dk.brics.jwig.persistence,
                               dk.brics.jwig.persistence.security,
                               dk.brics.jwig.sitemap" 
                 Package="true" overview="src/overview-full.html"
                 sourcepath="src" destdir="doc" nodeprecated="true" author="true" notree="true" nohelp="true"
                 windowtitle="JWIG">
            <doctitle><![CDATA[JWIG API Specification]]></doctitle>
            <bottom><![CDATA[<i> Copyright &#169; 2008-2012 Anders M&oslash;ller &amp; Mathias Schwarz. </i>]]></bottom>
            <link href="http://java.sun.com/javase/6/docs/api/"/>
            <link href="http://www.brics.dk/Xact/doc"/>
            <link href="http://www.caucho.com/resin-javadoc/"/>
            <link href="http://tomcat.apache.org/tomcat-6.0-doc/api/"/>
            <link href="http://commons.apache.org/fileupload/apidocs/"/>
            <link href="http://java.sun.com/products/javamail/javadocs"/>
            <link href="http://logging.apache.org/log4j/1.2/apidocs"/>
            <link href="http://docs.jboss.org/hibernate/orm/4.1/javadocs/"/>
            <classpath refid="classpath"/>
        </javadoc>
        <mkdir dir="doc-public"/>
        <javadoc packagenames="dk.brics.jwig,
                               dk.brics.jwig.util,
                               dk.brics.jwig.persistence,
        	                   dk.brics.jwig.sitemap" 
        	     Protected="true" overview="src/overview-public.html"
                 sourcepath="src" destdir="doc-public" nodeprecated="true" author="true" notree="true" nohelp="true"
                 windowtitle="JWIG">
            <doctitle><![CDATA[JWIG API Specification]]></doctitle>
            <bottom><![CDATA[<i> Copyright &#169; 2008-2012 Anders M&oslash;ller &amp; Mathias Schwarz. </i>]]></bottom>
            <link href="http://java.sun.com/javase/6/docs/api/"/>
            <link href="http://www.brics.dk/Xact/doc"/>
            <link href="http://www.caucho.com/resin-javadoc/"/>
            <link href="http://tomcat.apache.org/tomcat-6.0-doc/api/"/>
            <link href="http://commons.apache.org/fileupload/apidocs/"/>
            <link href="http://java.sun.com/products/javamail/javadocs"/>
            <link href="http://logging.apache.org/log4j/1.2/apidocs"/>
            <link href="http://docs.jboss.org/hibernate/orm/4.1/javadocs/"/>
            <classpath refid="classpath"/>
        </javadoc>
    </target>

    <target name="examples-compile" depends="jar">
        <mkdir dir="examples/build"/>
        <fileset id="xactfiles" dir="examples/src" includes="**/*.xact,**/*.java"/>
        <pathconvert property="xactfiles2" pathsep=" " refid="xactfiles">
            <map from="${basedir}/examples/src/" to=""/>
        </pathconvert>
        <path id="cp">
            <fileset dir="lib" includes="*.jar"/>
            <fileset dir="lib/app" includes="*.jar"/>
            <fileset dir="lib/hibernate" includes="*.jar"/>
            <fileset dir="lib/app-building" includes="*.jar"/>
            <fileset dir="lib/building" includes="servlet-api.jar"/>
            <fileset dir="dist" includes="${project}.jar"/>
        </path>
        <java classname="dk.brics.xact.compiler.Main" dir="examples/src" fork="true">
            <arg line="-cp=${toString:cp} -out=../build ${xactfiles2}"/>
            <classpath>
                <fileset dir="." includes="lib/**/*.jar"/>
                <pathelement location="dist/${project}.jar"/>
            </classpath>
        </java>
        <copy todir="examples/build">
            <fileset dir="examples/src" includes="**/*.xml,**/*.properties"/>
        </copy>
        <javac srcdir="examples/build" includes="**/*.java" source="1.6" target="1.6" destdir="examples/build"
               optimize="${optimize}" debug="on">
            <classpath>
                <fileset dir="." includes="lib/**/*.jar"/>
                <pathelement location="dist/${project}.jar"/>
            </classpath>
            <compilerarg line="-encoding ISO-8859-1" compiler="modern"/>
            <compilerarg line="-Xlint:unchecked" compiler="modern"/>
        </javac>
    </target>

    <target name="examples-war" depends="examples-compile">
        <mkdir dir="dist"/>
        <mkdir dir="temp/WEB-INF/classes"/>
        <copy todir="temp/WEB-INF/classes">
            <fileset dir="examples/build" includes="**" excludes="**/*.java"/>
        </copy>
        <copy todir="temp">
            <fileset dir="web" includes="**"/>
        </copy>
        <mkdir dir="temp/META-INF"/>
        <copy file="examples/META-INF/context.xml" todir="temp/META-INF"/>
        <copy todir="temp/WEB-INF/lib">
            <fileset dir="lib" includes="*.jar"/>
            <fileset dir="lib/app" includes="*.jar"/>
            <fileset dir="lib/hibernate" includes="*.jar"/>
            <fileset dir="examples/lib" includes="*.jar"/>
        </copy>
        <copy file="dist/${project}.jar" todir="temp/WEB-INF/lib"/>
        <mkdir dir="dist"/>
        <jar jarfile="dist/${project}-examples.war" basedir="temp"/>
        <delete dir="temp"/>
    </target>

    <target name="publish" depends="all">
        <fail message="property 'public' should be set in local.properties">
            <condition>
                <not>
                    <isset property="public"/>
                </not>
            </condition>
        </fail>
        <delete dir="${public}/doc"/>
        <mkdir dir="${public}/doc"/>
        <copy todir="${public}/doc">
            <fileset dir="doc"/>
        </copy>
        <delete dir="${public}/doc-public"/>
        <mkdir dir="${public}/doc-public"/>
        <copy todir="${public}/doc-public">
            <fileset dir="doc-public"/>
        </copy>
        <mkdir dir="${public}/dist"/>
        <copy todir="${public}/dist">
            <fileset dir="dist" includes="*"/>
        </copy>
        <mkdir dir="${public}/lib"/>
        <copy todir="${public}/lib">
            <fileset dir="lib"/>
        </copy>
        <mkdir dir="${public}/manual"/>
        <copy todir="${public}/manual">
            <fileset dir="manual" includes="manual.html,style.css"/>
        </copy>
        <chmod dir="${public}" perm="go+r"
               includes="doc-public/**,doc-public,doc/**,doc,dist/**,dist,lib/**,lib,*.tar.gz" type="both"/>
        <chmod dir="${public}" perm="go+x" includes="doc-public/**,doc-public,doc/**,doc,dist/**,dist,lib/**,lib"
               type="dir"/>
    </target>

    <target name="manual">
        <java classname="net.sf.saxon.Transform" fork="true" output="manual/manual.html">
            <arg line="manual/manual.xml manual/style.xsl"/>
            <classpath refid="classpath"/>
        </java>
        <java classname="net.sf.saxon.Transform" fork="true" output="manual/manual.tex">
            <arg line="manual/manual.xml manual/stylelatex.xsl"/>
            <classpath refid="classpath"/>
        </java>
    </target>

    <target name="examples-deploy" depends="clean,examples-war">
        <fail message="property 'webapps' should be set in local.properties">
            <condition>
                <not>
                    <isset property="webapps"/>
                </not>
            </condition>
        </fail>
        <copy todir="${webapps}" file="dist/${project}-examples.war"/>
    </target>

    <target name="examples-analyze" depends="examples-compile">
        <java classname="dk.brics.jwig.analysis.xact.Analyzer" fork="true">
            <classpath path="dist/${project}.jar"/>
            <classpath path="lib/xact.jar"/>
            <classpath path="lib/schematools.jar"/>
            <classpath path="examples/build"/>
            <classpath>
                <fileset dir="lib/analysis">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <!--<jvmarg value="-Dsoot-classpath=../JWIG/examples/build"/> -->
            <arg value="-dir=examples/build"/>
            <jvmarg value="-Ddk.brics.xact.analysis.debug=2"/>
        </java>
    </target>

</project>
